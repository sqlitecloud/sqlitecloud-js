name: 'end to end test'
on:
  pull_request:
  push:

env:
  DATABASE_URL: ${{ secrets.CHINOOK_DATABASE_URL }}

jobs:
  examples-test:
    if: false
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    defaults:
      run:
        shell: bash

    name: 'Node, Bun, Deno, Browsers, Express, Knex, NextJS, Vite Test'
    timeout-minutes: 15
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      #setup node, bun and deno
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      - uses: oven-sh/setup-bun@v2
      - uses: denoland/setup-deno@v2
        with:
          deno-version: vx.x.x

      - name: setup playwright for browser related test
        run: npx playwright install --with-deps && npx playwright install msedge && npx playwright install chrome

      - name: build driver
        run: npm i && npm run build

      #testing driver, removing examples after testing to save up space
      - name: node with-javascript-express
        working-directory: examples/with-javascript-express
        run: |
          npm i
          npm start &
          sleep 3
          node_test=$(curl localhost:3000)
          if [[ $node_test == *"{\"tracks\":[{\"TrackId\":1,\"Name\":\"For Those About To Rock (We Salute You)\",\"AlbumId\":1,\"MediaTypeId\":1,\"GenreId\":1,\"Composer\":\"Angus Young, Malcolm Young, Brian Johnson\",\"Milliseconds\":343719,\"Bytes\":11170334,\"UnitPrice\":0.99},{"* ]]; then
            echo "✅ node with-javascript-express test passed"
            npx kill-port 3000
            exit 0
          fi
          echo "❌ node with-javascript-express test failed"
          exit 1

      - name: bun with-javascript-express
        working-directory: examples/with-javascript-express
        run: |
          if [ "$RUNNER_OS" != "Windows" ]; then
            bun i #re-installing dependencies in windows with bash causes a panic
          fi
          bun start &
          sleep 3
          bun_test=$(curl localhost:3000)
          if [[ $bun_test == *"{\"tracks\":[{\"TrackId\":1,\"Name\":\"For Those About To Rock (We Salute You)\",\"AlbumId\":1,\"MediaTypeId\":1,\"GenreId\":1,\"Composer\":\"Angus Young, Malcolm Young, Brian Johnson\",\"Milliseconds\":343719,\"Bytes\":11170334,\"UnitPrice\":0.99},{"* ]]; then
            echo "✅ bun with-javascript-express test passed"
            npx kill-port 3000
            exit 0
          fi
          echo "❌ bun with-javascript-express test failed"
          exit 1

      - name: deno with-javascript-express
        working-directory: examples/with-javascript-express
        run: |
          deno run start &
          sleep 3
          deno_test=$(curl localhost:3000)
          if [[ $deno_test == *"{\"tracks\":[{\"TrackId\":1,\"Name\":\"For Those About To Rock (We Salute You)\",\"AlbumId\":1,\"MediaTypeId\":1,\"GenreId\":1,\"Composer\":\"Angus Young, Malcolm Young, Brian Johnson\",\"Milliseconds\":343719,\"Bytes\":11170334,\"UnitPrice\":0.99},{"* ]]; then
            echo "✅ deno with-javascript-express test passed"
            npx kill-port 3000
            exit 0
          fi
          echo "❌ deno with-javascript-express test failed"
          exit 1

      - name: remove with-javascript-express
        run: rm -rf examples/with-javascript-express

      - name: node with-plain-javascript
        working-directory: examples/with-plain-javascript
        run: |
          npm i
          app_log=$(mktemp)
          npm start > "$app_log" 2>&1 &

          app_pid=$!
          sleep 3
          kill "$app_pid" 2>/dev/null

          node_test=$(<"$app_log")
          rm "$app_log"

          if [[ "$node_test" == *"Composer: 'Angus Young, Malcolm Young, Brian Johnson',"* ]]; then
            echo "✅ node with-plain-javascript test passed"
            exit 0
          fi
          echo "❌ node with-plain-javascript test failed"
          exit 1

      - name: bun with-plain-javascript
        working-directory: examples/with-plain-javascript
        run: |
          if [ "$RUNNER_OS" != "Windows" ]; then
            bun i #re-installing dependencies in windows with bash causes a panic
          fi
          app_log=$(mktemp)
          bun start > "$app_log" 2>&1 &

          app_pid=$!
          sleep 3
          kill "$app_pid" 2>/dev/null

          bun_test=$(<"$app_log")
          rm "$app_log"

          if [[ "$bun_test" == *"Composer: 'Angus Young, Malcolm Young, Brian Johnson',"* ]]; then
            echo "✅ bun with-plain-javascript test passed"
            exit 0
          fi
          echo "❌ bun with-plain-javascript test failed"
          exit 1

      - name: deno with-plain-javascript
        working-directory: examples/with-plain-javascript
        run: |
          app_log=$(mktemp)
          deno run start > "$app_log" 2>&1 &

          app_pid=$!
          sleep 3
          kill "$app_pid" 2>/dev/null

          deno_test=$(<"$app_log")
          rm "$app_log"

          if [[ "$deno_test" == *"Composer: 'Angus Young, Malcolm Young, Brian Johnson',"* ]]; then
            echo "✅ deno with-plain-javascript test passed"
            exit 0
          fi
          echo "❌ deno with-plain-javascript test failed"
          exit 1

      - name: remove with-plain-javascript
        if: matrix.os != 'windows-latest' #kill command doesn not work on windows with bash, we can skip this step
        run: rm -rf examples/with-plain-javascript

      - name: node with-typescript-knex
        working-directory: examples/with-typescript-knex
        run: |
          npm i
          node_test=$(npx tsx example.ts)

          if [[ "$node_test" == *"\"Company\": \"Embraer - Empresa Brasileira de Aeronáutica S.A.\","* ]]; then
            echo "✅ node with-typescript-knex test passed"
            exit 0
          fi
          echo "❌ node with-typescript-knex test failed"
          exit 1

      - name: bun with-typescript-knex
        working-directory: examples/with-typescript-knex
        run: |
          if [ "$RUNNER_OS" != "Windows" ]; then
            bun i #re-installing dependencies in windows with bash causes a panic
          fi
          bun_test=$(bun example.ts)

          if [[ "$bun_test" == *"\"Company\": \"Embraer - Empresa Brasileira de Aeronáutica S.A.\","* ]]; then
            echo "✅ bun with-typescript-knex test passed"
            exit 0
          fi
          echo "❌ bun with-typescript-knex test failed"
          exit 1

      - name: remove with-typescript-knex
        run: rm -rf examples/with-typescript-knex

      - name: node with-typescript-nextjs
        working-directory: examples/with-typescript-nextjs
        run: |
          npm i
          npm run dev &
          sleep 3
          node_test=$(curl localhost:3000)
          node_test2=$(curl localhost:3000/api/hello)

          if [[ $node_test == *"next.js json route"* && $node_test2 == *"{\"data\":[{\"TrackId\":1,\"Name\":\"For Those About To Rock (We Salute You)\",\"AlbumId\":1,\"MediaTypeId\":1,\"GenreId\":1,\"Composer\":\"Angus Young, Malcolm Young, Brian Johnson\",\"Milliseconds\":343719,\"Bytes\":11170334,\"UnitPrice\":0.99},{"* ]]; then
            echo "✅ node with-typescript-nextjs test passed"
            npx kill-port 3000
            exit 0
          fi
          echo "❌ node with-typescript-nextjs test failed"
          exit 1

      - name: bun with-typescript-nextjs
        working-directory: examples/with-typescript-nextjs
        run: |
          if [ "$RUNNER_OS" != "Windows" ]; then
            bun i #re-installing dependencies in windows with bash causes a panic
          fi
          bun run dev &
          sleep 3
          bun_test=$(curl localhost:3000)
          bun_test2=$(curl localhost:3000/api/hello)
          if [[ $bun_test == *"next.js json route"* && $bun_test2 == *"{\"data\":[{\"TrackId\":1,\"Name\":\"For Those About To Rock (We Salute You)\",\"AlbumId\":1,\"MediaTypeId\":1,\"GenreId\":1,\"Composer\":\"Angus Young, Malcolm Young, Brian Johnson\",\"Milliseconds\":343719,\"Bytes\":11170334,\"UnitPrice\":0.99},{"* ]]; then
            echo "✅ bun with-typescript-nextjs test passed"
            npx kill-port 3000
            exit 0
          fi
          echo "❌ bun with-typescript-nextjs test failed"
          exit 1

      - name: deno with-typescript-nextjs
        working-directory: examples/with-typescript-nextjs
        run: |
          deno run dev &
          sleep 3
          #not testing index page because it throws an error with deno
          deno_test=$(curl localhost:3000/api/hello)
          if [[ $deno_test == *"{\"data\":[{\"TrackId\":1,\"Name\":\"For Those About To Rock (We Salute You)\",\"AlbumId\":1,\"MediaTypeId\":1,\"GenreId\":1,\"Composer\":\"Angus Young, Malcolm Young, Brian Johnson\",\"Milliseconds\":343719,\"Bytes\":11170334,\"UnitPrice\":0.99},{"* ]]; then
            echo "✅ deno with-typescript-nextjs test passed"
            npx kill-port 3000
            exit 0
          fi
          echo "❌ deno with-typescript-nextjs test failed"
          exit 1

      - name: remove with-typescript-nextjs
        run: rm -rf examples/with-typescript-nextjs

      - name: node with-javascript-vite
        working-directory: examples/with-javascript-vite
        run: npm i && npx playwright test
        env:
          VITE_DATABASE_URL: ${{ secrets.CHINOOK_DATABASE_URL }}

      - name: bun with-javascript-vite
        working-directory: examples/with-javascript-vite
        run: |
          if [ "$RUNNER_OS" != "Windows" ]; then
            bun i #re-installing dependencies in windows with bash causes a panic
          fi
          bun playwright test
        env:
          VITE_DATABASE_URL: ${{ secrets.CHINOOK_DATABASE_URL }}

      - name: deno with-javascript-vite
        if: matrix.os != 'windows-latest' #https://github.com/denoland/deno/issues/23524#issuecomment-2292075726
        working-directory: examples/with-javascript-vite
        run: deno add npm:@playwright/test && deno run --allow-all npm:playwright test
        env:
          VITE_DATABASE_URL: ${{ secrets.CHINOOK_DATABASE_URL }}
          PW_DISABLE_TS_ESM: true

      - name: remove with-javascript-vite
        run: rm -rf examples/with-javascript-vite

      - name: node with-javascript-browser
        working-directory: examples/with-javascript-browser
        run: npm i && node test.cjs

      - name: bun with-javascript-browser
        if: matrix.os != 'windows-latest' #cannot launch browsers on windows with bash in commonjs?
        working-directory: examples/with-javascript-browser
        run: bun i && bun test.cjs

      - name: deno with-javascript-browser
        if: matrix.os != 'windows-latest' #https://github.com/denoland/deno/issues/23524#issuecomment-2292075726
        working-directory: examples/with-javascript-browser
        run: deno --allow-all test.cjs

      - name: remove with-javascript-browser
        run: rm -rf examples/with-javascript-browser

  ios-test:
    name: 'React Native iOS Test'
    timeout-minutes: 40
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: setup utils
        run: brew tap wix/brew && brew install applesimutils
        env:
          HOMEBREW_NO_AUTO_UPDATE: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1

      - name: build driver
        run: npm i && npm run build && echo "DRIVER=$(npm pack --json | jq '.[0].filename')" >> $GITHUB_ENV

      - name: install last committed version of the driver
        working-directory: examples/with-typescript-react-native
        run: npm i ../../${{ env.DRIVER }}

      - name: install cocoapods
        working-directory: examples/with-typescript-react-native
        run: cd ios ; pod install ; cd -

      - name: build
        working-directory: examples/with-typescript-react-native
        run: npx detox build --configuration ios.sim.release

      - name: test
        working-directory: examples/with-typescript-react-native
        run: npx detox test --configuration ios.sim.release --cleanup --record-videos all

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: detox-artifacts
          path: artifacts

  android-test:
    strategy:
      matrix:
        api-level: [29, 35] #23, 26, 28, 30
        arch: [x86_64, x86, arm64-v8a]

    name: 'React Native Android Test'
    timeout-minutes: 30
    runs-on: ubuntu-latest #android emulator on github actions works only on linux and old macos x86 builds, we can skip other os since the build and test process is going to be the same

    steps:
      - uses: actions/checkout@v4

      - name: enable kvm group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 21

      - name: build driver
        run: npm i && npm run build && echo "DRIVER=$(npm pack --json | jq '.[0].filename')" >> $GITHUB_ENV

      - name: install last committed version of the driver
        working-directory: examples/with-typescript-react-native
        run: npm i ../../${{ env.DRIVER }}

      - name: build app
        working-directory: examples/with-typescript-react-native
        run: npx detox build --configuration android.emu.release

      - name: test app
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          arch: ${{ matrix.arch }}
          avd-name: Medium_Phone_API_35
          emulator-boot-timeout: 20000
          working-directory: examples/with-typescript-react-native
          script: npx detox test --configuration android.emu.release --record-videos all

      - name: upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: detox-artifacts
          path: examples/with-typescript-react-native/artifacts
